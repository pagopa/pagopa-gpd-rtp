name: Integration Tests

on:
  schedule:
    - cron: '00 08 * * *'

  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
        default: dev
      notify:
        description: 'send the slack notification'
        required: false
        type: boolean
        default: true


permissions:
  id-token: write
  contents: read
  deployments: write

env:
  EXECUTION_ENV: ${{(github.event.inputs == null && 'dev') || inputs.environment }}

jobs:
  integration_test:
    name: Test $EXECUTION_ENV
    runs-on: [ self-hosted-job, "$EXECUTION_ENV" ]
    environment:
      name: oidc
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707

      - name: setup
        id: setup
        run: |
          echo "CLIENT_ID=${{secrets.DEV_CLIENT_ID}}" >> $GITHUB_ENV 
          echo "TENANT_ID=${{secrets.DEV_TENANT_ID}}" >> $GITHUB_ENV 
          echo "SUBSCRIPTION_ID=${{secrets.DEV_SUBSCRIPTION_ID}}" >> $GITHUB_ENV 
          echo "ENV_SHORT=d" >> $GITHUB_ENV 
          echo "PG_GPD_PASSWORD=${{ secrets.DEV_PG_GPD_PASSWORD }}" >> $GITHUB_ENV
          echo "PG_GPD_USERNAME=${{ secrets.DEV_PG_GPD_USERNAME }}" >> $GITHUB_ENV
          echo "OPT_IN_REDIS_PASSWORD=${{ secrets.DEV_OPT_IN_REDIS_PASSWORD }}" >> $GITHUB_ENV
          echo "OPT_IN_REDIS_HOSTNAME=${{ secrets.DEV_OPT_IN_REDIS_HOSTNAME }}" >> $GITHUB_ENV
          echo "RTP_EVENTHUB_CONN_STRING=${{ secrets.DEV_RTP_EVENTHUB_CONN_STRING }}" >> $GITHUB_ENV
          
          if [[ $EXECUTION_ENV == "uat" ]]; then
            echo "CLIENT_ID=${{secrets.UAT_CLIENT_ID}}" >> $GITHUB_ENV 
            echo "TENANT_ID=${{secrets.UAT_TENANT_ID}}" >> $GITHUB_ENV 
            echo "SUBSCRIPTION_ID=${{secrets.UAT_SUBSCRIPTION_ID}}" >> $GITHUB_ENV 
            echo "ENV_SHORT=u" >> $GITHUB_ENV 
            echo "PG_GPD_PASSWORD=${{ secrets.UAT_PG_GPD_PASSWORD }}" >> $GITHUB_ENV
            echo "PG_GPD_USERNAME=${{ secrets.UAT_PG_GPD_USERNAME }}" >> $GITHUB_ENV
            echo "OPT_IN_REDIS_PASSWORD=${{ secrets.UAT_OPT_IN_REDIS_PASSWORD }}" >> $GITHUB_ENV
            echo "OPT_IN_REDIS_HOSTNAME=${{ secrets.UAT_OPT_IN_REDIS_HOSTNAME }}" >> $GITHUB_ENV
            echo "RTP_EVENTHUB_CONN_STRING=${{ secrets.UAT_RTP_EVENTHUB_CONN_STRING }}" >> $GITHUB_ENV
          fi

      - name: Azure Login
        id: login
        uses: azure/login@6b2456866fc08b011acb422a92a4aa20e2c4de32 # v2.1.0
        with:
          client-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTION_ID }}

      - name: Run Kafka to Redis utils on Docker
        shell: bash
        id: run_kafka_to_redis_docker
        run: |
          cd ./test-utils
          chmod +x ./run_compose.sh
          ./run_compose.sh 'pagopa-${{ env.ENV_SHORT }}-itn-gps-rtp-integration-evh.servicebus.windows.net:9093' "${{ env.RTP_EVENTHUB_CONN_STRING }}" "rtp-events"

      - name: Run Integration Tests
        shell: bash
        run: |
          export CUCUMBER_PUBLISH_TOKEN=${{ secrets.CUCUMBER_PUBLISH_TOKEN }}
          export PG_GPD_PASSWORD=${{ env.PG_GPD_PASSWORD }}
          export PG_GPD_USERNAME=${{ env.PG_GPD_USERNAME }}
          export OPT_IN_REDIS_PASSWORD=${{ env.OPT_IN_REDIS_PASSWORD }}
          export OPT_IN_REDIS_HOSTNAME=${{ env.OPT_IN_REDIS_HOSTNAME }}

          cd ./integration-test
          chmod +x ./run_integration_test.sh
          ./run_integration_test.sh $EXECUTION_ENV

  notify:
    needs: [ integration_test ]
    runs-on: ubuntu-latest
    name: Notify
    if: ${{ always() && (github.event_name == 'schedule' || inputs.notify == true ) }}
    steps:
      - name: Report Status
        if: ${{ inputs.notify }}
        uses: ravsamhq/notify-slack-action@be814b201e233b2dc673608aa46e5447c8ab13f2 # v2
        with:
          status: ${{ needs.integration_test.result }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notify_when: 'failure,skipped'
          notification_title: 'Integration Tests Result'
          message_format: '{emoji} <{run_url}|{workflow}> {status_message} in <{repo_url}|{repo}> in $EXECUTION_ENV'
          footer: 'Linked to <{workflow_url}| workflow file>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.INTEGRATION_TEST_SLACK_WEBHOOK_URL }}