# Info
info.application.name=@project.name@
info.application.artifactId=@project.artifactId@
info.application.version=@project.version@
info.application.description=@project.description@
info.properties.environment=test
# logging
logging.level.root=INFO
logging.level.it.gov.pagopa=INFO
# CORS configuration
cors.configuration={"origins": ["*"], "methods": ["*"]}
# Server
# TODO: set your base path
server.servlet.context-path=/
server.port=8080
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
spring.datasource.type=
# EH Kafka Configuration
spring.cloud.function.definition=ingestPaymentOption
## Kafka Payment Options
spring.cloud.stream.bindings.ingestPaymentOption-in-0.destination=cdc-raw-auto.apd.payment_option
spring.cloud.stream.bindings.ingestPaymentOption-in-0.group=
spring.cloud.stream.bindings.ingestPaymentOption-in-0.content-type=application/json
spring.cloud.stream.bindings.ingestPaymentOption-in-0.binder=payment-option-consumer
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.batch-mode=true
spring.cloud.stream.binders.payment-option-consumer.type=kafka
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.brokers=""
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="";
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.bindings.ingestPaymentOption-out-0.destination=rtp-events
spring.cloud.stream.bindings.ingestPaymentOption-out-0.content-type=application/json
spring.cloud.stream.bindings.ingestPaymentOption-out-0.producer.partitionKeyExpression=headers.id
spring.cloud.stream.bindings.ingestPaymentOption-out-0.producer.partitionCount=1
spring.cloud.stream.bindings.ingestPaymentOption-out-0.binder=rtp-message-producer
spring.cloud.stream.binders.rtp-message-producer.type=kafka
spring.cloud.stream.binders.rtp-message-producer.environment.spring.cloud.stream.kafka.binder.brokers=""
spring.cloud.stream.binders.rtp-message-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="";
spring.cloud.stream.binders.rtp-message-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
## Kafka misc
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.heartbeat.interval.ms=3000
spring.cloud.stream.kafka.binder.configuration.session.timeout.ms=60000
spring.cloud.stream.kafka.binder.configuration.request.timeout.ms=60000
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=PLAIN
spring.cloud.stream.kafka.binder.configuration.security.protocol=SASL_SSL
spring.cloud.stream.kafka.binder.configuration.connections.max.idle.ms=180000
spring.cloud.stream.kafka.binder.configuration.metadata.max.idle.ms=180000
spring.cloud.stream.kafka.binder.configuration.metadata.max.age.ms=179000
spring.cloud.stream.kafka.binder.configuration.max.request.size=1000000
spring.cloud.stream.kafka.bindings.ingestPaymentOption-in-0.consumer.ackMode=MANUAL
## Ingestion service
gpd.rtp.ingestion.service.transfer.categories=validTransferCategory
gpd.rtp.ingestion.errorHandler.maxRetries=5
## Anonymizer client
service.anonymizer.host=""
service.anonymizer.path=""
service.anonymizer.retry.maxAttempts=3
service.anonymizer.retry.maxDelay=2000
service.shared.subscription-key=""
## RTP client
service.rtp.host=http://rtp-host.it
service.rtp.subscription-key=rtp_sub_key

service.rtp-mil.host=http://rtp-mil-host.it
service.rtp-mil.clientId=rtp_mil_client_id
service.rtp-mil.clientSecret=rtp_mil_client_secret
## Redis
redis.host=localhost
redis.port=6370
redis.password=pw
## Blob Storage
dead.letter.storage.account.connection.string=dl_conn_string
dead.letter.storage.account.endpoint=dl_endpoint
dead.letter.storage.container.name=dl_container_name
