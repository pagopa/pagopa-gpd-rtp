# Info
info.application.name=@project.name@
info.application.artifactId=@project.artifactId@
info.application.version=@project.version@
info.application.description=@project.description@
info.properties.environment=${APP_ENVIRONMENT:azure}

# Actuator
management.endpoints.web.exposure.include=health,info,bindings
management.endpoints.jmx.exposure.include=health,info,bindings
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Openapi
springdoc.writer-with-order-by-keys=true
springdoc.writer-with-default-pretty-printer=true

# Server
server.servlet.context-path=/
server.port=8080

# Logging
logging.level.root=${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.gov.pagopa=${APP_LOGGING_LEVEL:INFO}
logging.group.kafka=org.apache.kafka, org.springframework.kafka
logging.level.kafka=${KAFKA_LOGGING_LEVEL:INFO}
spring.cloud.openfeign.client.config.default.logger-level=${REST_CLIENT_LOGGER_LEVEL:NONE}
logging.level.org.springframework.kafka=DEBUG
logging.level.org.apache.kafka.clients=INFO

# CORS configuration
cors.configuration=${CORS_CONFIGURATION:{"origins": ["*"], "methods": ["*"]}}

# Jackson serialization
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=true
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=false
spring.jackson.deserialization.READ_UNKNOWN_ENUM_VALUES_AS_NULL=true

## Spring DATASOURCE
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.type=${SPRING_DATASOURCE_TYPE}
spring.jpa.properties.hibernate.default_schema=${SCHEMA_NAME}

# EH Kafka Configuration
spring.cloud.function.definition=ingestPaymentOption
## Kafka Payment Options
spring.cloud.stream.bindings.ingestPaymentOption-in-0.destination=${KAFKA_PAYMENT_OPTION_RAW_TOPIC:cdc-raw-auto.apd.payment_option}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.group=${PAYMENT_OPTION_EVENTHUB_COMPLETE_GROUP_ID:rtp}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.binder=payment-option-consumer
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.batch-mode=false
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.max-attempts=${KAFKA_MAX_ATTEMPTS:5}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.back-off-initial-interval=${KAFKA_BACKOFF_INITIAL_INTERVAL:5}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.back-off-max-interval=${KAFKA_BACKOFF_MAX_INTERVAL:1800}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.back-off-multiplier=${KAFKA_BACKOFF_MULTIPLIER:2}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.startOffset=${KAFKA_START_OFFSET:latest}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.error-handler-definition=deadLetterErrorHandler
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.autoStartup=false

spring.cloud.stream.kafka.bindings.ingestPaymentOption-in-0.consumer.ackMode=MANUAL
spring.cloud.stream.binders.payment-option-consumer.type=kafka
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.brokers=${PAYMENT_OPTION_KAFKA_BROKER}
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${PAYMENT_OPTION_INPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.bindings.ingestPaymentOption-out-0.destination=${KAFKA_RTP_MESSAGE_OUTPUT_TOPIC:rtp-events}
spring.cloud.stream.bindings.ingestPaymentOption-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestPaymentOption-out-0.binder=rtp-message-producer
spring.cloud.stream.binders.rtp-message-producer.type=kafka
spring.cloud.stream.binders.rtp-message-producer.environment.spring.cloud.stream.kafka.binder.brokers=${RTP_KAFKA_BROKER}
spring.cloud.stream.binders.rtp-message-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${RTP_MESSAGE_OUTPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.rtp-message-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer

## Kafka misc
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.heartbeat.interval.ms=${KAFKA_CONFIG_HEARTBEAT_INTERVAL_MS:3000}
spring.cloud.stream.kafka.binder.configuration.session.timeout.ms=${KAFKA_CONFIG_SESSION_TIMEOUT_MS:60000}
spring.cloud.stream.kafka.binder.configuration.request.timeout.ms=${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
spring.cloud.stream.kafka.binder.configuration.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
spring.cloud.stream.kafka.binder.configuration.connections.max.idle.ms=${KAFKA_CONFIG_CONNECTION_MAX_IDLE_TIME:180000}
spring.cloud.stream.kafka.binder.configuration.metadata.max.idle.ms=${KAFKA_CONFIG_METADATA_MAX_IDLE_MS:180000}
spring.cloud.stream.kafka.binder.configuration.metadata.max.age.ms=${KAFKA_CONFIG_METADATA_MAX_AGE_INTERVAL:179000}

## Ingestion service
gpd.rtp.ingestion.service.transfer.categories=${VALID_TRANSFER_CATEGORIES:9/0201102IM/,9/0201133IM/,9/0101109IM/,9/0101101IM/,9/0301105TS/}

# Clients configuration
service.retry.maxAttempts=${MAX_ATTEMPTS:3}
service.retry.maxDelay=${MAX_DELAY:2000}

## Anonymizer client
service.anonymizer.host=${ANONYMIZER_URL_HOST}
service.anonymizer.path=${ANONYMIZER_URL_PATH}
service.shared.subscription-key=${SHARED_SUBSCRIPTION_KEY}

## RTP client
service.rtp.host=${RTP_URL_HOST}
service.rtp.subscription-key=${RTP_SUBSCRIPTION_KEY}

service.rtp-mil.host=${RTP_MIL_HOST}
service.rtp-mil.clientId=${RTP_MIL_CLIENT_ID}
service.rtp-mil.clientSecret=${RTP_MIL_CLIENT_SECRET}


## Redis
redis.host=${REDIS_HOSTNAME}
redis.port=${REDIS_PORT}
redis.password=${REDIS_PASSWORD}

## Blob Storage
dead.letter.storage.account.connection.string=${DEAD_LETTER_CONNECTION_STRING}
dead.letter.storage.account.endpoint=${DEAD_LETTER_ENDPOINT}
dead.letter.storage.container.name=${DEAD_LETTER_CONTAINER_NAME}

# Cache configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=${CACHE_SIZE:1000}, expireAfterAccess=${CACHE_EXPIRATION_TIME:1h}
cache.enabled=${CACHE_ENABLED:true}
